import{_ as s,r as a,o as e,c as p,a as t,b as o}from"./app.e640ebd4.js";const c={},l=o(`<h1 id="\u79FB\u9664\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u79FB\u9664\u5143\u7D20" aria-hidden="true">#</a> \u79FB\u9664\u5143\u7D20</h1><ol><li>\u5B9A\u4E49\u4E00\u4E2A\u6307\u9488\uFF0C\u901A\u8FC7 while \u5FAA\u73AF\uFF0C\u904D\u5386\u6570\u7EC4</li><li>\u5224\u65AD\u6307\u9488\u6307\u5411\u7684\u5F53\u524D\u503C\u548C\u76EE\u6807\u503C\u662F\u5426\u76F8\u7B49\uFF0C\u5982\u679C\u76F8\u7B49\uFF0C\u5219\u79FB\u9664\u5F53\u524D\u9879</li><li>\u5982\u679C\u4E0D\u76F8\u7B49\uFF0C\u5411\u53F3\u79FB\u52A8\u6307\u9488</li></ol><h2 id="\u5B8C\u6574\u4EE3\u7801\u5982\u4E0B" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u4EE3\u7801\u5982\u4E0B" aria-hidden="true">#</a> \u5B8C\u6574\u4EE3\u7801\u5982\u4E0B</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">val</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">removeElement</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      nums<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      i<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token number">2</span>
<span class="token function">removeElement</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> val<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function u(i,r){const n=a("Plum");return e(),p("div",null,[l,t(n)])}const d=s(c,[["render",u],["__file","\u79FB\u9664\u5143\u7D20.html.vue"]]);export{d as default};
