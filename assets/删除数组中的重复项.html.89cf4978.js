import{_ as s,r as a,o as e,c as p,a as t,b as c}from"./app.e640ebd4.js";const o={},l=c(`<h1 id="\u5220\u9664\u6570\u7EC4\u4E2D\u7684\u91CD\u590D\u9879" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u6570\u7EC4\u4E2D\u7684\u91CD\u590D\u9879" aria-hidden="true">#</a> \u5220\u9664\u6570\u7EC4\u4E2D\u7684\u91CD\u590D\u9879</h1><blockquote><p>\u8FD9\u9053\u9898\u7684\u96BE\u70B9\u5728\u4E8E\u4E0D\u80FD\u521B\u5EFA\u65B0\u7684\u5BF9\u8C61\uFF0C\u53EA\u80FD\u64CD\u4F5C\u539F\u5BF9\u8C61\uFF0C\u5982\u679C\u80FD\u521B\u5EFA\u65B0\u5BF9\u8C61\u7684\u8BDD\u90A3\u4E48\u8FD9\u9053\u9898\u4F1A\u53D8\u5F97\u975E\u5E38\u7B80\u5355</p></blockquote><h2 id="\u5B8C\u6574\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u4EE3\u7801" aria-hidden="true">#</a> \u5B8C\u6574\u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">removeDuplicates</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">removeDuplicates</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u6307\u9488i\uFF0C\u521D\u59CB\u6307\u5411 0 \u7684\u4F4D\u7F6E</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u5F53\u524D\u9879\u8DDF\u524D\u4E00\u9879\u76F8\u7B49\uFF0C\u4ECE\u6570\u7EC4\u4E2D\u79FB\u9664\u5F53\u524D\u9879</span>
      nums<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u6CA1\u6709\u53D1\u73B0\u76F8\u7B49\u7684\u9879\uFF0C\u6307\u9488\u53F3\u79FB</span>
      i<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>

<span class="token function">removeDuplicates</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5982\u679C\u53EF\u4EE5\u521B\u5EFA\u65B0\u7684\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5982\u679C\u53EF\u4EE5\u521B\u5EFA\u65B0\u7684\u6570\u7EC4" aria-hidden="true">#</a> \u5982\u679C\u53EF\u4EE5\u521B\u5EFA\u65B0\u7684\u6570\u7EC4</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">removeDuplicates</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">removeDuplicates</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CA1\u9519\uFF0C\u5C31\u662F\u8FD9\u4E48\u7B80\u5355\uFF01</p>`,7);function u(i,r){const n=a("Plum");return e(),p("div",null,[l,t(n)])}const d=s(o,[["render",u],["__file","\u5220\u9664\u6570\u7EC4\u4E2D\u7684\u91CD\u590D\u9879.html.vue"]]);export{d as default};
