import{_ as s,r as a,o as p,c as t,a as e,b as o}from"./app.e640ebd4.js";const c={},u=o(`<h1 id="\u5BFB\u627E\u4E24\u4E2A\u6B63\u5E8F\u6570\u7EC4\u7684\u4E2D\u4F4D\u6570" tabindex="-1"><a class="header-anchor" href="#\u5BFB\u627E\u4E24\u4E2A\u6B63\u5E8F\u6570\u7EC4\u7684\u4E2D\u4F4D\u6570" aria-hidden="true">#</a> \u5BFB\u627E\u4E24\u4E2A\u6B63\u5E8F\u6570\u7EC4\u7684\u4E2D\u4F4D\u6570</h1><p>\u8FD9\u9053\u9898\u5176\u5B9E\u8DDF\u4E2D\u5B66\u7684\u65F6\u5019\u8BA9\u6C42\u5F97\u4E2D\u4F4D\u6570\u662F\u4E00\u4E2A\u6837\u7684\uFF0C\u4E0D\u8FC7\u8FD9\u91CC\u6709\u4E00\u4E2A\u70B9\uFF0C\u56E0\u4E3A\u4ED6\u7ED9\u7684\u662F\u4E24\u4E2A\u6709\u5E8F\u7684\u6570\u7EC4\uFF0C\u800C\u4E2D\u4F4D\u6570\u80AF\u5B9A\u662F\u5728\u4E00\u7EC4\u6570\u636E\u4E2D\u627E\u7684\uFF0C\u6240\u4EE5\u7B2C\u4E00\u6B65\u662F\u8981\u5BF9\u4E24\u4E2A\u6570\u636E\u8FDB\u884C\u5408\u5E76\u3002</p><p>\u56E0\u4E3A\u6211\u4EEC\u5E76\u4E0D\u80FD\u4FDD\u8BC1\u7B2C\u4E8C\u4E2A\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u6570\u636E\u4E00\u5B9A\u6BD4\u7B2C\u4E00\u4E2A\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4E2A\u6570\u636E\u5927\uFF0C\u6240\u4EE5\u5728\u5408\u5E76\u4E4B\u540E\u6211\u4EEC\u8981\u5BF9\u6570\u7EC4\u91CD\u65B0\u8FDB\u884C\u6392\u5E8F\u3002</p><p>\u5728\u5BFB\u627E\u4E2D\u4F4D\u6570\u7684\u8FC7\u7A0B\u4E2D\u53C8\u4F1A\u6709\u4E24\u79CD\u60C5\u51B5\uFF1A</p><p>\u7B2C\u4E00\u79CD\uFF1A\u6570\u7EC4\u7684\u957F\u5EA6\u662F\u5076\u6570\uFF0C\u8FD9\u79CD\u60C5\u51B5\u6211\u4EEC\u9700\u8981\u627E\u5230\u6570\u7EC4\u4E2D\u95F4\u7684\u4E24\u4E2A\u6570\u636E\uFF0C\u6C42\u548C\uFF0C\u7136\u540E\u518D\u9664\u4EE5 2\uFF0C\u8FD9\u624D\u662F\u8FD9\u7EC4\u6570\u636E\u7684\u4E2D\u4F4D\u6570\u3002</p><p>\u7B2C\u4E8C\u79CD\uFF1A\u6570\u7EC4\u7684\u957F\u5EA6\u662F\u5947\u6570\uFF0C\u6BD4\u5982\u8BF4\u957F\u5EA6\u662F 7\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u627E\u5230\u6570\u7EC4\u4E2D\u95F4\u7684\u90A3\u6761\u6570\u636E\u5C31\u53EF\u4EE5\u4E86\u3002</p><h2 id="\u5B8C\u6574\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u4EE3\u7801" aria-hidden="true">#</a> \u5B8C\u6574\u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums2</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">findMedianSortedArrays</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> temp <span class="token operator">=</span> nums1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>nums2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>temp<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>temp<span class="token punctuation">[</span>temp<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> temp<span class="token punctuation">[</span>temp<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> temp<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> nums1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  nums2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span>nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function l(i,r){const n=a("Plum");return p(),t("div",null,[u,e(n)])}const d=s(c,[["render",l],["__file","\u5BFB\u627E\u4E24\u4E2A\u6B63\u5E8F\u6570\u7EC4\u7684\u4E2D\u4F4D\u6570.html.vue"]]);export{d as default};
