import{_ as s,r as a,o as t,c as e,a as p,b as o}from"./app.e640ebd4.js";const c={},l=o(`<h1 id="\u641C\u7D22\u63D2\u5165\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u641C\u7D22\u63D2\u5165\u4F4D\u7F6E" aria-hidden="true">#</a> \u641C\u7D22\u63D2\u5165\u4F4D\u7F6E</h1><ol><li>\u5224\u65AD\u76EE\u6807\u503C\u5728\u6570\u7EC4\u4E2D\u662F\u5426\u5B58\u5728\uFF0C\u5982\u679C\u5B58\u5728\uFF0C\u8FD4\u56DE\u7D22\u5F15\u503C</li><li>\u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5224\u65AD\u76EE\u6807\u503C\u662F\u5426\u6BD4\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u503C\u5C0F\uFF0C\u5982\u679C\u662F\uFF0C\u8FD4\u56DE 0</li><li>\u5224\u65AD\u76EE\u6807\u503C\u662F\u5426\u6BD4\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u5C0F\uFF0C\u5982\u679C\u662F\uFF0C\u8FD4\u56DE\u6570\u7EC4\u7684\u957F\u5EA6</li><li>\u5982\u679C\u4EE5\u4E0A\u6761\u4EF6\u90FD\u4E0D\u6210\u7ACB\uFF0C\u904D\u5386\u6570\u7EC4\uFF0C\u627E\u5230\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u6BD4\u76EE\u6807\u503C\u5927\u7684\u5143\u7D20\uFF0C\u8FD4\u56DE\u8BE5\u5143\u7D20\u7684\u7D22\u5F15\u503C</li></ol><h2 id="\u5B8C\u6574\u4EE3\u7801\u5982\u4E0B" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u4EE3\u7801\u5982\u4E0B" aria-hidden="true">#</a> \u5B8C\u6574\u4EE3\u7801\u5982\u4E0B</h2><h3 id="\u65B9\u6848\u4E00" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6848\u4E00" aria-hidden="true">#</a> \u65B9\u6848\u4E00</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">target</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">searchInsert</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">.</span>length
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> i
    <span class="token punctuation">}</span>
    i<span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65B9\u6848\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6848\u4E8C" aria-hidden="true">#</a> \u65B9\u6848\u4E8C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">target</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">searchInsert</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> hasTarget <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hasTarget <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> hasTarget
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">.</span>length
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&lt;=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> i
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function i(u,r){const n=a("Plum");return t(),e("div",null,[l,p(n)])}const d=s(c,[["render",i],["__file","\u641C\u7D22\u63D2\u5165\u4F4D\u7F6E.html.vue"]]);export{d as default};
